<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Mps" xml:space="preserve">
    <value>Mps</value>
  </data>
  <data name="An error occurred while getting product" xml:space="preserve">
    <value>An error occurred while getting product</value>
  </data>
  <data name="An error occurred while importing brands" xml:space="preserve">
    <value>An error occurred while importing brands</value>
  </data>
  <data name="An error occurred while updating user" xml:space="preserve">
    <value>An error occurred while updating user</value>
  </data>
  <data name="Brand not found" xml:space="preserve">
    <value>Brand not found</value>
  </data>
  <data name="Brand saved successfully" xml:space="preserve">
    <value>Brand saved successfully</value>
  </data>
  <data name="Category not found" xml:space="preserve">
    <value>Category not found</value>
  </data>
  <data name="Category saved successfully" xml:space="preserve">
    <value>Category saved successfully</value>
  </data>
  <data name="Delete user successfully" xml:space="preserve">
    <value>Delete user successfully</value>
  </data>
  <data name="Email is existed" xml:space="preserve">
    <value>Email is existed</value>
  </data>
  <data name="Email is not valid" xml:space="preserve">
    <value>Email is not valid</value>
  </data>
  <data name="Email is required" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="Error when export brands" xml:space="preserve">
    <value>Error when export brands</value>
  </data>
  <data name="Error when get brands" xml:space="preserve">
    <value>Error when get brands</value>
  </data>
  <data name="Error when get categories" xml:space="preserve">
    <value>Error when get categories</value>
  </data>
  <data name="Error when get products" xml:space="preserve">
    <value>Error when get products</value>
  </data>
  <data name="File is empty" xml:space="preserve">
    <value>File is empty</value>
  </data>
  <data name="Firebase register return null" xml:space="preserve">
    <value>Firebase register return null</value>
  </data>
  <data name="Id is not valid" xml:space="preserve">
    <value>Id is not valid</value>
  </data>
  <data name="Import partial successfully" xml:space="preserve">
    <value>Import partial successfully</value>
  </data>
  <data name="Imported successfully" xml:space="preserve">
    <value>Imported successfully</value>
  </data>
  <data name="Wrong email or password" xml:space="preserve">
    <value>Wrong email or password</value>
  </data>
  <data name="Name is not valid" xml:space="preserve">
    <value>Name is not valid</value>
  </data>
  <data name="Name is required" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="Name must be 3 charactor above" xml:space="preserve">
    <value>Name must be 3 charactor above</value>
  </data>
  <data name="Password reset email sent" xml:space="preserve">
    <value>Password reset email sent</value>
  </data>
  <data name="Payment not found" xml:space="preserve">
    <value>Payment not found</value>
  </data>
  <data name="Phone number is not valid" xml:space="preserve">
    <value>Phone number is not valid</value>
  </data>
  <data name="Product created successfully" xml:space="preserve">
    <value>Product created successfully</value>
  </data>
  <data name="Product not found" xml:space="preserve">
    <value>Product not found</value>
  </data>
  <data name="Product updated successfully" xml:space="preserve">
    <value>Product updated successfully</value>
  </data>
  <data name="Role is not valid" xml:space="preserve">
    <value>Role is not valid</value>
  </data>
  <data name="Shop created successfully" xml:space="preserve">
    <value>Shop created successfully</value>
  </data>
  <data name="Shop not found" xml:space="preserve">
    <value>Shop not found</value>
  </data>
  <data name="Shop status updated successfully" xml:space="preserve">
    <value>Shop status updated successfully</value>
  </data>
  <data name="Successfully created new role" xml:space="preserve">
    <value>Successfully created new role</value>
  </data>
  <data name="Successfully created new user" xml:space="preserve">
    <value>Successfully created new user</value>
  </data>
  <data name="Unauthorized" xml:space="preserve">
    <value>Unauthorized</value>
  </data>
  <data name="Update device successfully" xml:space="preserve">
    <value>Update device successfully</value>
  </data>
  <data name="User already has this role" xml:space="preserve">
    <value>User already has this role</value>
  </data>
  <data name="User not found" xml:space="preserve">
    <value>User not found</value>
  </data>
  <data name="User updated successfully" xml:space="preserve">
    <value>User updated successfully</value>
  </data>
  <data name="You are not allowed to update this user" xml:space="preserve">
    <value>You are not allowed to update this user</value>
  </data>
  <data name="You are not authorized to view this user" xml:space="preserve">
    <value>You are not authorized to view this user</value>
  </data>
  <data name="You don't have permission to activate or deactivate this user" xml:space="preserve">
    <value>You don't have permission to activate or deactivate this user</value>
  </data>
  <data name="You don't have permission to create this role" xml:space="preserve">
    <value>You don't have permission to create this role</value>
  </data>
  <data name="[SMPS System] Reset Password" xml:space="preserve">
    <value>[SMPS System] Reset Password</value>
  </data>
  <data name="Not Found" xml:space="preserve">
    <value>Not Found</value>
  </data>
  <data name="Order has been created successfully" xml:space="preserve">
    <value>Order has been created successfully</value>
  </data>
  <data name="Invalid refresh token" xml:space="preserve">
    <value>Invalid refresh token</value>
  </data>
  <data name="User not found in database" xml:space="preserve">
    <value>User not found in database</value>
  </data>
  <data name="User is not active" xml:space="preserve">
    <value>User is not active</value>
  </data>
  <data name="Category deleted successfully" xml:space="preserve">
    <value>Category deleted successfully</value>
  </data>
  <data name="Product out of stock" xml:space="preserve">
    <value>Product out of stock</value>
  </data>
  <data name="Order status changed" xml:space="preserve">
    <value>Order status changed</value>
  </data>
  <data name="Payout request has been sent" xml:space="preserve">
    <value>Payout request has been sent</value>
  </data>
  <data name="An error occurred" xml:space="preserve">
    <value>An error occurred</value>
  </data>
  <data name="Invalid order status" xml:space="preserve">
    <value>Invalid order status</value>
  </data>
  <data name="Error when change order status" xml:space="preserve">
    <value>Error when change order status</value>
  </data>
  <data name="Request monthly payout successfully" xml:space="preserve">
    <value>Request monthly payout successfully</value>
  </data>
  <data name="An error occurred while processing the request" xml:space="preserve">
    <value>An error occurred while processing the request</value>
  </data>
  <data name="An error occurs when refund revenue" xml:space="preserve">
    <value>An error occurs when refund revenue</value>
  </data>
  <data name="Rating must be between 1 and 5" xml:space="preserve">
    <value>Rating must be between 1 and 5</value>
  </data>
  <data name="Feedback has been sent" xml:space="preserve">
    <value>Feedback has been sent</value>
  </data>
  <data name="Failed to send feedback" xml:space="preserve">
    <value>Failed to send feedback</value>
  </data>
  <data name="Failed to get feedbacks" xml:space="preserve">
    <value>Failed to get feedbacks</value>
  </data>
  <data name="You have already sent feedback" xml:space="preserve">
    <value>You have already sent feedback</value>
  </data>
  <data name="No setting changed" xml:space="preserve">
    <value>No setting changed</value>
  </data>
  <data name="Setting saved" xml:space="preserve">
    <value>Setting saved</value>
  </data>
  <data name="Request custom payout successfully" xml:space="preserve">
    <value>Request custom payout successfully</value>
  </data>
  <data name="Payout amount is invalid" xml:space="preserve">
    <value>Payout amount is invalid</value>
  </data>
</root>